name: JMeter Master

on:
  workflow_dispatch:
    inputs:
      slave_ip:
        description: 'IP address of the JMeter slave'
        required: true
        type: string

jobs:
  jmeter-master:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create Docker network
      run: docker network create jmeter-network

    - name: Start JMeter Slave Container
      run: |
        docker run -d --name jmeter-slave \
          --network=jmeter-network \
          -e JVM_ARGS=-Dserver.rmi.ssl.disable=true \
          justb4/jmeter

    - name: Create user.properties file
      run: echo "server.rmi.ssl.disable=true" > $GITHUB_WORKSPACE/user.properties

    - name: Verify user.properties content
      run: cat $GITHUB_WORKSPACE/user.properties

    - name: Test connectivity to JMeter slave
      run: |
        sudo apt-get update
        sudo apt-get install -y iputils-ping netcat
        echo "Pinging JMeter slave..."
        ping -c 4 ${{ github.event.inputs.slave_ip }}
        echo "Testing port 1099..."
        nc -zv ${{ github.event.inputs.slave_ip }} 1099 || echo "Port 1099 is not reachable"
        echo "Testing port 60000..."
        nc -zv ${{ github.event.inputs.slave_ip }} 60000 || echo "Port 60000 is not reachable"

    - name: Configure and run JMeter test
      run: |
        echo "${{ github.event.inputs.slave_ip }}" > $GITHUB_WORKSPACE/slaves.txt
        docker run --network=jmeter-network \
          -v $GITHUB_WORKSPACE:/workspace \
          justb4/jmeter \
          -n -t /workspace/Demo.jmx \
          -R${{ github.event.inputs.slave_ip }} \
          -Dserver.rmi.ssl.disable=true \
          -Duser.properties=/workspace/user.properties

    - name: Upload JTL file
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: jmeter-results
        path: $GITHUB_WORKSPACE/*.jtl

    - name: Post-test cleanup
      run: |
        echo "Test completed. Cleaning up..."
        docker stop jmeter-slave
        docker rm jmeter-slave
        docker network rm jmeter-network
